with(var_explained,(variance_explained-min(variance_explained))/max(variance_explained)-min(variance_explained))
library(ggplot2)
with(var_explained,(variance_explained-min(variance_explained))/max(variance_explained)-min(variance_explained))
var_explained
var_explained$variance_explained/sum(var_explained$variance_explained)
dat <- data.frame(x = c(rnorm(100), rnorm(100, 10, 2))
, y = c(rnorm(100), rlnorm(100, 9, 2))
, index = rep(1:2, each = 100)
)
require(ggplot2)
ggplot(dat, aes(x,y)) +
geom_point() +
facet_wrap(~ index, scales = "free_y")
x <- var_explained$PC
y1 <- var_explained$variance_explained
y2 <- var_explained$cum_var_explained
par(mar=c(5,4,4,5)+.1)
plot(x,y1,type="l",col="red")
par(new=TRUE)
plot(x, y2,,type="l",col="blue",xaxt="n",yaxt="n",xlab="",ylab="")
axis(4)
mtext("y2",side=4,line=3)
plot(x,y1,type="b",col="red")
barplot(x,y1,type="b",col="red")
y1
?barplot
barplot(y1,type="b",col="red")
par(new=TRUE)
plot(x, y2,,type="l",col="blue",xaxt="n",yaxt="n",xlab="",ylab="")
axis(4)
mtext("y2",side=4,line=3)
legend("topleft",col=c("red","blue"),lty=1,legend=c("y1","y2"))
x <- var_explained$PC
y1 <- var_explained$variance_explained
y2 <- var_explained$cum_var_explained
par(mar=c(5,4,4,5)+.1)
barplot(y1,type="b",col="red")
par(new=TRUE)
plot(x, y2,,type="l",col="blue",xaxt="n",yaxt="n",xlab="",ylab="")
axis(4)
mtext("y2",side=4,line=3)
legend("topleft",col=c("red","blue"),lty=1,legend=c("y1","y2"))
legend("topright",col=c("red","blue"),lty=1,legend=c("y1","y2"))
legend("centerright",col=c("red","blue"),lty=1,legend=c("y1","y2"))
legend("centeright",col=c("red","blue"),lty=1,legend=c("y1","y2"))
legend("right",col=c("red","blue"),lty=1,legend=c("y1","y2"))
x <- var_explained$PC
y1 <- var_explained$variance_explained
y2 <- var_explained$cum_var_explained
par(mar=c(5,4,4,5)+.1)
barplot(y1,type="b",col="red")
par(new=TRUE)
plot(x, y2,,type="l",col="blue",xaxt="n",yaxt="n",xlab="",ylab="")
axis(4)
mtext("y2",side=4,line=3)
legend("right",col=c("red","blue"),lty=1,legend=c("y1","y2"))
legend(c(1,1),col=c("red","blue"),lty=1,legend=c("y1","y2"))
legend(c(10,10),col=c("red","blue"),lty=1,legend=c("y1","y2"))
?legend(c(10,10),col=c("red","blue"),lty=1,legend=c("y1","y2"))
legend(5,5,col=c("red","blue"),lty=1,legend=c("y1","y2"))
legend(10,5,col=c("red","blue"),lty=1,legend=c("y1","y2"))
legend(1,5,col=c("red","blue"),lty=1,legend=c("y1","y2"))
legend(1,1,col=c("red","blue"),lty=1,legend=c("y1","y2"))
mtext("Cumulative Variance Explained",side=4,line=3)
plot(x, y2,,type="l",col="blue",xaxt="n",yaxt="n",xlab="Principle Component",ylab="Variance Explained")
axis(4)
mtext("Cumulative Variance Explained",side=4,line=3)
x <- var_explained$PC
y1 <- var_explained$variance_explained
y2 <- var_explained$cum_var_explained
par(mar=c(5,4,4,5)+.1)
barplot(y1,type="b",col="red")
par(new=TRUE)
plot(x, y2,,type="l",col="blue",xaxt="n",yaxt="n",xlab="Principle Component",ylab="Variance Explained")
axis(4)
mtext("Cumulative Variance Explained",side=4,line=3)
plot(x, y2,,type="l",col="blue",xlab="Principle Component",ylab="Variance Explained")
axis(4)
mtext("Cumulative Variance Explained",side=4,line=3)
x <- var_explained$PC
y1 <- var_explained$variance_explained
y2 <- var_explained$cum_var_explained
par(mar=c(5,4,4,5)+.1)
barplot(y1,type="b",col="red")
par(new=TRUE)
plot(x, y2,,type="l",col="blue",xlab="Principle Component",ylab="Variance Explained")
plot(x, y2,type="l",col="blue",xlab="Principle Component",ylab="Variance Explained")
axis(4)
par(mar=c(5,4,4,5)+.1)
barplot(y1,type="b",col="red")
par(new=TRUE)
plot(x, y2,type="l",col="blue",xlab="Principle Component",ylab="Variance Explained")
par(mar=c(5,4,4,5)+.1)
barplot(y1,type="b",col="red")
par(new=TRUE)
plot(x, y2,type="l",col="blue",xaxt="n",yaxt="n",xlab="Principle Component",ylab="Variance Explained")
axis(4)
barplot(y1,type="b",col="red",ylim=c(0,30))
par(new=TRUE)
plot(x, y2,type="l",col="blue",xaxt="n",yaxt="n",xlab="Principle Component",ylab="Variance Explained")
axis(4)
axis(10)
plot(x, y2,type="l",col="blue",xaxt="n",yaxt="n",xlab="Principle Component",ylab="Variance Explained")
axis(10)
mtext("Cumulative Variance Explained",side=4,line=3)
----
## Principle Component Analysis
x <- var_explained$PC
y1 <- var_explained$variance_explained
y2 <- var_explained$cum_var_explained
par(mar=c(5,4,4,5)+.1)
barplot(y1,type="b",col="red",ylim=c(0,30))
par(new=TRUE)
plot(x, y2,type="l",col="blue",xaxt="n",yaxt="n",xlab="Principle Component",ylab="Variance Explained")
axis(10)
mtext("Cumulative Variance Explained",side=10,line=3)
x <- var_explained$PC
y1 <- var_explained$variance_explained
y2 <- var_explained$cum_var_explained
par(mar=c(5,4,4,5)+.1)
barplot(y1,type="b",col="red",ylim=c(0,30))
par(new=TRUE)
plot(x, y2,type="l",col="blue",xaxt="n",yaxt="n",xlab="Principle Component",ylab="Variance Explained")
axis(4)
mtext("Cumulative Variance Explained",side=10,line=3)
x <- var_explained$PC
y1 <- var_explained$variance_explained
y2 <- var_explained$cum_var_explained
par(mar=c(5,4,4,5)+.1)
barplot(y1,type="b",col="red",ylim=c(0,30))
par(new=TRUE)
plot(x, y2,type="l",col="blue",xaxt="n",yaxt="n",xlab="Principle Component",ylab="Variance Explained")
axis(5)
mtext("Cumulative Variance Explained",side=4,line=3)
x <- var_explained$PC
y1 <- var_explained$variance_explained
y2 <- var_explained$cum_var_explained
par(mar=c(5,4,4,5)+.1)
barplot(y1,type="b",col="red",ylim=c(0,30))
par(new=TRUE)
plot(x, y2,type="l",col="blue",xaxt="n",yaxt="n",xlab="Principle Component",ylab="Variance Explained")
axis(5)
mtext("Cumulative Variance Explained",side=4,line=3)
x <- var_explained$PC
y1 <- var_explained$variance_explained
y2 <- var_explained$cum_var_explained
par(mar=c(5,4,4,5)+.1)
barplot(y1,type="b",col="red",ylim=c(0,30))
par(new=TRUE)
plot(x, y2,type="l",col="blue",xaxt="n",yaxt="n",xlab="Principle Component",ylab="Variance Explained")
axis(5)
mtext("Cumulative Variance Explained",side=4,line=3)
x <- var_explained$PC
y1 <- var_explained$variance_explained
y2 <- var_explained$cum_var_explained
par(mar=c(5,4,4,5)+.1)
barplot(y1,type="b",col="red",ylim=c(0,30))
par(new=TRUE)
plot(x, y2,type="l",col="blue",xaxt="n",yaxt="n",xlab="Principle Component",ylab="Variance Explained")
axis(3)
mtext("Cumulative Variance Explained",side=4,line=3)
x <- var_explained$PC
y1 <- var_explained$variance_explained
y2 <- var_explained$cum_var_explained
par(mar=c(5,4,4,5)+.1)
barplot(y1,type="b",col="red",ylim=c(0,30))
par(new=TRUE)
plot(x, y2,type="l",col="blue",xaxt="n",yaxt="n",xlab="Principle Component",ylab="Variance Explained")
axis(4)
mtext("Cumulative Variance Explained",side=4,line=3)
x <- var_explained$PC
y1 <- var_explained$variance_explained
y2 <- var_explained$cum_var_explained
par(mar=c(5,4,4,5)+.1)
barplot(y1,type="b",col="red",ylim=c(0,30))
par(new=TRUE)
plot(x, y2,type="l",col="blue",xaxt="n",yaxt="n",xlab="Principle Component",ylab="Variance Explained",ylim=c(0,100))
axis(4)
mtext("Cumulative Variance Explained",side=4,line=3)
barplot(y1,type="b",col="red",ylim=c(0,30),main="Variance Explained")
par(new=TRUE)
plot(x, y2,type="l",col="blue",xaxt="n",yaxt="n",xlab="Principle Component",ylab="Variance Explained",ylim=c(0,100))
axis(4)
mtext("Cumulative Variance Explained",side=4,line=3)
slidify('index.rmd')
roots
diag(roots)
slidify('index.rmd')
slidify('index.rmd')
slidify('index.rmd')
wine <- read.csv('http://archive.ics.uci.edu/ml/machine-learning-databases/wine/wine.data')
names(wine) <- c("class",'Alcohol','Malic','Ash','Alcalinity','Magnesium','Total_phenols',
'Flavanoids','NFphenols','Proanthocyanins','Color','Hue','Diluted','Proline')
str(wine)
str(head(wine))
str(wine[,1:5])
str(wine[,1:7])
s.wine <- scale(wine[,-1])
best_k <- 0
num_k <- 20
for (i in 1:num_k){
best_k[i] <- sum(kmeans(s.wine,centers=i)$withinss)
}
barplot(best_k, xlab = "Number of clusters",
names.arg = 1:num_k,
ylab="Within groups sum of squares",
main="Scree Plot for Wine dataset")
```
slidify('index.rmd')
slidify('index.rmd')
voting_data <- read.csv('http://archive.ics.uci.edu/ml/machine-learning-databases/voting-records/house-votes-84.data')
names(voting_data) <- c('party','handicapped-infants','water-project-cost-sharing',
'adoption-of-the-budget-resolution','physician-fee-freeze',
'el-salvador-aid','religious-groups-in-schools',
'anti-satellite-test-ban','aid-to-nicaraguan-contras',
'mx-missile','immigration','synfuels-corporation-cutback',
'education-spending','superfund-right-to-sue','crime',
'duty-free-exports','export-administration-act-south-africa')
prop.table(table(voting_data[,1]))
n <- nrow(voting_data)
train_ind <- sample(n,2/3*n)
voting_train <- voting_data[train_ind,]
voting_test <- voting_data[-train_ind,]
install.packages('animation')
library(animation)
oopt = ani.options(interval = 1)
ani_ex = rbind(matrix(rnorm(100, sd = 0.3), ncol = 2),
matrix(rnorm(100, sd = 0.3),
ncol = 2))
colnames(ani_ex) = c("x", "y")
kmeans.an = function(
x = cbind(X1 = runif(50), X2 = runif(50)), centers = 4, hints = c('Move centers!', 'Find cluster?'),
pch = 1:5, col = 1:5
) {
x = as.matrix(x)
ocluster = sample(centers, nrow(x), replace = TRUE)
if (length(centers) == 1) centers = x[sample(nrow(x), centers), ] else
centers = as.matrix(centers)
numcent = nrow(centers)
dst = matrix(nrow = nrow(x), ncol = numcent)
j = 1
pch = rep(pch, length = numcent)
col = rep(col, length = numcent)
for (j in 1:ani.options('nmax')) {
dev.hold()
plot(x, pch = pch[ocluster], col = col[ocluster], panel.first = grid())
mtext(hints[1], 4)
points(centers, pch = pch[1:numcent], cex = 3, lwd = 2, col = col[1:numcent])
ani.pause()
for (i in 1:numcent) {
dst[, i] = sqrt(apply((t(t(x) - unlist(centers[i, ])))^2, 1, sum))
}
ncluster = apply(dst, 1, which.min)
plot(x, type = 'n')
mtext(hints[2], 4)
grid()
ocenters = centers
for (i in 1:numcent) {
xx = subset(x, ncluster == i)
polygon(xx[chull(xx), ], density = 10, col = col[i], lty = 2)
points(xx, pch = pch[i], col = col[i])
centers[i, ] = apply(xx, 2, mean)
}
points(ocenters, cex = 3, col = col[1:numcent], pch = pch[1:numcent], lwd = 2)
ani.pause()
if (all(ncluster == ocluster)) break
ocluster = ncluster
}
invisible(list(cluster = ncluster, centers = centers))
}
kmeans.an(ani_ex, centers = 5, hints = c("Move centers","Cluster found?"))
kmeans.an(ani_ex, centers = 5, hints = c("Move centers","Cluster found?"))
?prop.table
table(voting_data[,1])
sum(table(voting_data[,1]))
table(voting_data[,1])/sum(table(voting_data[,1]))
prop.table(table(voting_data[,1]))
tree_model <- C5.0(voting_train[,-1],voting_train[,1], trials=1)
tree_predict <- predict(tree_model, newdata=voting_test[,-1])
conf <- CrossTable(voting_test[,1], tree_predict, prop.chisq = FALSE,
prop.c = FALSE, prop.r = FALSE,
dnn = c("actual class", "predicted class"))
conf
conf$t
conf$prop.tbl
conf$prop.tbl
conf$t
str(conf)
summary(conf)
?CrossTable
?stable
?xtable
library(xtables)
library(xtable)
?xtable
xtable(conf$t)
conf <- CrossTable(voting_test[,1], tree_predict, prop.chisq = FALSE,
prop.c = FALSE, prop.r = FALSE,
dnn = c("actual class", "predicted class"))
conf$t
conf <- CrossTable(voting_test[,1], tree_predict, prop.chisq = FALSE,
prop.c = FALSE, prop.r = FALSE,
dnn = c("actual class", "predicted class"))$t
conf
conf$t
conf <- CrossTable(voting_test[,1], tree_predict, prop.chisq = FALSE,
prop.c = FALSE, prop.r = FALSE,
dnn = c("actual class", "predicted class"))
```
conf$t
names(conf$t)
names(conf$t)<-"hello"
conf$t
row.names(conf$t)<-"hello"
rownames(conf$t)<-"hello"
colnames(conf$t)<-"hello"
Colnames(conf$t)<-"hello"
col.names(conf$t)<-"hello"
summary(tree_model)
summary(tree_model)   # in-sample error rate
str(summary(tree_model))
summary(tree_model)$call
summary(tree_model)$output
str(tree_model)
m <- matrix(c(x1,x2),ncol=2)
m <- m/sqrt(norm(m))  ## normalize
as.matrix(t(m) %*% diag(roots) %*% m)
A
as.matrix(m %*% diag(roots) %*% t(m))
m
m <- matrix(c(x2,x1),ncol=2)
m <- m/sqrt(norm(m))  ## normalize
as.matrix(m %*% diag(roots) %*% t(m))
as.matrix(t(m) %*% diag(roots) %*% m)
m <- matrix(c(x1,x2),ncol=2)
m <- m/sqrt(norm(m))  ## normalize
as.matrix(m %*% diag(roots) %*% t(m))
slidify('index.rmd')
m <- matrix(c(x1,x2),ncol=2)
m <- m/sqrt(norm(m))  ## normalize
as.matrix(m %*% diag(roots) %*% t(m))
inv(m)
inverse(m)
m^-1
as.matrix(m^-1 %*% diag(roots) %*% m)
m
1/m
solve(m)
as.matrix(solve(m) %*% diag(roots) %*% m)
as.matrix(t(m) %*% diag(roots) %*% m)
m <- matrix(c(x2,x1),ncol=2)
m <- m/sqrt(norm(m))  ## normalize
as.matrix(t(m) %*% diag(roots) %*% m)
m <- matrix(c(x1,x2),ncol=2)
m <- m/sqrt(norm(m))  ## normalize
as.matrix(t(m) %*% diag(roots) %*% m)
norm(m)
m <- m/sqrt(norm(m))  ## normalize
m
m <- matrix(c(x1,x2),ncol=2)
m
norm(m)
m <- m/sqrt(norm(m))  ## normalize
m
as.matrix(t(m) %*% diag(roots) %*% m)
A
as.matrix(m %*% diag(roots) %*% solve(m))
as.matrix(m %*% diag(roots) %*% t(m))
slidify('index.rmd')
slidify('index.rmd')
slidify('index.rmd')
Cy <- cov(PC)
sum(diag(Cy) - eigenvalues)
sum(Cy[(upper.tri(Cy)|lower.tri(Cy))])   ## off diagonals are 0 since PC's are orthogonal
upper.tri(Cy)
diag_only <- upper.tri(Cy)|lower.tri(Cy)
diag_only
off_diag <- upper.tri(Cy)|lower.tri(Cy)
sum(Cy[off_diag])   ## off diagonals are 0 since PC's are orthogonal
diag(Cy) - eigenvalues
round(sum_diff,5)
sum_diff <- sum(diag(Cy) - eigenvalues)
round(sum_diff,5)
round(sum_diff,6)
round(sum(Cy[off_diag]),6)   ## off diagonals are 0 since PC's are orthogonal
par(mar=c(5,4,4,5)+.1)
barplot(var_explained$variance_explained,type="b",col="red",ylim=c(0,30),main="Variance Explained")
par(new=TRUE)
plot(var_explained$PC, var_explained$cum_var_explained,type="l",col="blue",xaxt="n",yaxt="n",xlab="Principle Component",ylab="Variance Explained",ylim=c(0,100))
axis(4)
mtext("Cumulative Variance Explained",side=4,line=3)
```
----
plot(var_explained$PC, var_explained$cum_var_explained,type="l",col="blue",xaxt="n",yaxt="n",xlab="Principle Component",ylab="Variance Explained",ylim=c(0,100),size=2)
axis(4)
plot(var_explained$PC, var_explained$cum_var_explained,type="l",col="blue",xaxt="n",yaxt="n",xlab="Principle Component",ylab="Variance Explained",ylim=c(0,100),lw=2)
plot(var_explained$PC, var_explained$cum_var_explained,type="l",col="blue",xaxt="n",yaxt="n",xlab="Principle Component",ylab="Variance Explained",ylim=c(0,100),lw=2)
axis(4)
par(mar=c(5,4,4,5)+.1)
barplot(var_explained$variance_explained,type="b",col="red",ylim=c(0,30),main="Variance Explained")
par(new=TRUE)
plot(var_explained$PC, var_explained$cum_var_explained,type="l",col="blue",xaxt="n",yaxt="n",xlab="Principle Component",ylab="Variance Explained",ylim=c(0,100),lw=2)
axis(4)
mtext("Cumulative Variance Explained",side=4,line=3)
par(mar=c(5,4,4,5)+.1)
barplot(var_explained$variance_explained,type="b",col="red",ylim=c(0,30),main="Variance Explained")
par(new=TRUE)
plot(var_explained$PC, var_explained$cum_var_explained,type="l",col="blue",xaxt="n",yaxt="n",xlab="Principle Component",ylab="Variance Explained",ylim=c(0,100),lw=3)
axis(4)
mtext("Cumulative Variance Explained",side=4,line=3)
```
sum((eigenvectors[,1])^2)
pca.df <- prcomp(scaled_features)
round(eigenvalues,10) == round((pca.df$sdev)^2,10)
round(eigenvectors[,1],10) == round(pca.df$rotation[,1],10)
sum((eigenvectors[,1])^2)
PC1
rows
sum(diag(table(gen,as.character(data$Gender))))/rows
gen
slidify('index.rmd')
par(mar=c(5,4,4,5)+.1)
barplot(var_explained$variance_explained,type="b",col="red",ylim=c(0,30),main="Variance Explained")
par(new=TRUE)
plot(var_explained$PC, var_explained$cum_var_explained,type="l",col="blue",xaxt="n",yaxt="n",xlab="Principle Component",ylab="Variance Explained",ylim=c(0,100),lw=3)
axis(4)
mtext("Cumulative Variance Explained",side=4,line=3)
slidify('index.rmd')
tree_model <- C5.0(voting_train[,-1],voting_train[,1], trials=1)
tree_predict <- predict(tree_model, newdata=voting_test[,-1])
conf <- CrossTable(voting_test[,1], tree_predict, prop.chisq = FALSE,
prop.c = FALSE, prop.r = FALSE,
dnn = c("actual class", "predicted class"))
conf$t
conf <- table(voting_test[,1], tree_predict)
conf
prop.table(conf)
summary(tree_model)   # in-sample error rate
head(C5imp(tree_model))   # most important variables
summary(tree_model)   # in-sample error rate
str(summary(tree_model))
str(tree_model)
tree_model$tree
tree_model$predictors
summary(tree_model)   # in-sample error rate
tree_model
predict(tree_model)
tree_predict
conf <- table(voting_test[,1], tree_predict)
prop.table(conf)
conf
conf <- table(voting_train[,1], tree_predict)
tree_predict <- predict(tree_model, newdata=voting_train[,-1])
conf <- table(voting_train[,1], tree_predict)
conf
prop.table(conf)
tree_model <- C5.0(voting_train[,-1],voting_train[,1], trials=1)
tree_predict <- predict(tree_model, newdata=voting_test[,-1])
conf <- table(voting_test[,1], tree_predict)
prop.table(conf)
conf
boosted_tree_model <- C5.0(voting_train[,-1],voting_train[,1], trials=25)
boosted_tennis_predict <- predict(boosted_tree_model,voting_test[,-1])
boosted_conf <- table(voting_test[,1], boosted_tennis_predict)
boosted_conf
summary(boosted_tree_model)
boosted_conf
boosted_tennis_predict <- predict(boosted_tree_model,voting_train[,-1])
boosted_conf <- table(voting_train[,1], boosted_tennis_predict)
boosted_conf
boosted_tennis_predict <- predict(boosted_tree_model,voting_test[,-1])
boosted_conf <- table(voting_test[,1], boosted_tennis_predict)
boosted_conf
error_cost <- matrix(c(0,1,2,0),nrow=2)
cost_model <- C5.0(voting_train[,-1],voting_train[,1], trials=1, costs = error_cost)
cost_predict <- predict(cost_model, newdata=voting_test[,-1])
conf <- table(voting_test[,1], cost_predict)
conf
tris <- seq(1,50,by=2)
boost_acc <- NULL
for (i in tris){
temp <- C5.0(voting_train[,-1],voting_train[,1], trials=i, costs = error_cost)
temp_pred <- predict(temp,voting_test[,-1])
boost_acc <- append(boost_acc,sum(diag(table(temp_pred,voting_test[,1]))))
}
plot(boost_acc,type='l')
slidify('index.rmd')
fn(rev(ans[,2])[1])   ## value of f(x) at minimum
paste(fn(rev(ans[,2])[1]),"hello")   ## value of f(x) at minimum
c(fn(rev(ans[,2])[1]),"hello")   ## value of f(x) at minimum
c(numeric(fn(rev(ans[,2])[1])),"hello")   ## value of f(x) at minimum
c(as.numeric(fn(rev(ans[,2])[1])),"hello")   ## value of f(x) at minimum
as.numeric(c(fn(rev(ans[,2])[1]),"hello"))   ## value of f(x) at minimum
list(c(fn(rev(ans[,2])[1]),"hello"))   ## value of f(x) at minimum
list(fn(rev(ans[,2])[1]),"hello"))   ## value of f(x) at minimum
list(fn(rev(ans[,2])[1]),"hello")   ## value of f(x) at minimum
cat(fn(rev(ans[,2])[1]),"hello")   ## value of f(x) at minimum
cat(fn(rev(ans[,2])[1]),"## value of f(x) at minimum")"
cat(fn(rev(ans[,2])[1]),"## value of f(x) at minimum")
cat(fn(rev(ans[,2])[1]),"## value of f(x) at minimum")
cat(fn(rev(ans[,2])[1]),"  ## value of f(x) at minimum")
cat(fn(rev(ans[,2])[1]),"    ## value of f(x) at minimum")
tris <- seq(1,50,by=2)
boost_acc <- NULL
for (i in tris){
temp <- C5.0(voting_train[,-1],voting_train[,1], trials=i, costs = error_cost)
temp_pred <- predict(temp,voting_test[,-1])
boost_acc <- append(boost_acc,sum(diag(table(temp_pred,voting_test[,1]))))
}
plot(boost_acc,type='l')
slidify('index.rmd')
slidify('index.rmd')
